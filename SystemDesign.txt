(1)第一题2个table，存friend 和relationship，如何支持Facebook scale的query.. 

      给user table加个column，叫做 totalFriends,
      然后给relationship table 加个trigger，每当有insert 或delete event，update totalFriends for corresponding user(s)

(2)第二题，一个在线文档处理系统，LB是round Robin 分发个service，每个文件不能split，有什么问题，如果recover 如果service down了。

    答：round ronbin 两个缺点，第一默认所有server的处理能力相当。如果有的server比较强悍，有的server比较弱鸡，会造成资源浪费。
      round ronbin不考虑number of connection request a server received。
      比如一个server上的doc有很多人同时访问，那么有新的doc进来的时候最好就不要再发到这个server上，
      改进方法Least Connection load balancing。
      or using consitent hashing

(3)given 5 topics to choose 2, ood / production issue / frontend / testing / system hardware
     1) production issue: a digram showing memory leak; how to scale tps for a global hosted db and third-party apis
     
             using master/slave --- all read go to master
                        ---- all write got to slave
            different region, try to use differnt db. add a load balance before the api, redirectly to the region db
     
     2) ood: composition & inheritance; what is dependency injection
     
          Inheritance is an "is-a" relationship. Composition is a "has-a". 
          Car has a Engine and Car is a Automobile
          
          Using DI, we move the creation and binding of the dependent 
          objects outside of the class that depends on them using configration or annotation.
          
 (3—1）系统社稷问答题：
    1. 有个server fleet可以处理video，一个server只能处理10个，然后突然有bug发生了，问fix bug的时候怎么保证正常serve traffic.
        1） 每个server fleet 有个backup的 server， 万一bug，rediect traffict to backup server
            可以用consistent hashing 保证 equal distribution
    2. 有10000个vendor machine，他们每天凌晨1点定时给server发信息 update，问这个设计有什么问题..
          有俩问题，1 只有一个server 接受request 2. 1万台售货机同一时间发。

                  1. 只有一台server 处理所有的request。容易造成single point of failure. 发送失败
                  2. 同一时间发，对服务器压力承受能力是个考验。网络负载（band width）也是。

          解决方法，分时间段发送。如果不行，多搞几个server。
    3. 有个service可以支持用户上传照片视频，然后有个链接可以分享给别人。问用username shard有啥问题？follow up应该用啥shard.
        问题是：1） 用户上传了很多照片，这些照片会存在一个server
               2）如果链接很多人分享，for example，lady gaga，会造成存lady gaga 的server load很大，
              
              用照片的id shard，然后用consistent hashing来分布存照片。。。

          
(4) there is music app and a load balancing server, the LB server forwards the music uploading (write)
    request to 100 database server by the consistent hashing strategry, and 
    the each server can store the same anount of music, 
    Q: List the bottleneck and issues of this design.
    1, google doc那道题的变种
    2，主要就是答least connection balance, consistence hashing可能会给已经很busy的server又转发链接
    ：ound ronbin 两个缺点，第一默认所有server的处理能力相当。如果有的server比较强悍，有的server比较弱鸡，会造成资源浪费。
    
    (7)个人面经：
1. System design (15min)
两道题, chat format. 面试官会copy一段题目，要阅读理解
a. 就是那个什么facebook两个table；一个user table；一个friendship table；需要计算user有多少friend。请问如何scale up。
我就回答如果普通情况下直接SQL; 但scale up的话，就要存cache。面试官继续会问cache里存什么data

b. 一个document只能发送给一个server；一个server可以process multiple docs。Load balancer用round-robin在发送document request。请问这在scale up角度有什么问题。
回答：consistent hashing. 一旦需要增加server数量(scale up), round-robin方式里hashing key都会改变，所有的docs->server对应关系都要大大改变，会是巨大的cost (比如存了cache)。所以要用circular structure,  just assign docs to the next server on the circle, which will be minimally affected by server scale-up.
感觉面试官自己好像也不是很懂的样子。。。

    
     round ronbin不考虑number of connection request a server received。
    比如一个server上的doc有很多人同时访问，那么有新的doc进来的时候最好就不要再发到这个server上，改进方法Least Connection load balancing。
    3，music存在一个服务器上可能会single point failure

b) there is mobile pazzle game that run on the mobile phone.
    This app can provide the hints to this game to users, there are two options 
    to store the hints 1) the hints are stored in the remote server and everytime 
    the hints need to be fetched from remote server,
    2) the hints are stored in the local mobile phone, everytime
    the hints can be loaded from mobile directly. 
    Q: list the disadvantages and advantages of these two schemas
1, 存服务器上
pros:
  手机端会变得简单和轻量级
cons:
  万一玩着玩着，服务器挂掉，你的hint也就丢了
2，存手机上
pros:
   不会存在hint丢的问题
cons：
    preload可能会耗时

c) there is very popular music app that has been relased in US, and there is a plan to launch this app in international countries. Q: list some considerations focused on the backed system when the app is going to launched in international areas.
1， data shard
2, 在其他地方建数据中心

(5) 在一个server上有一个process同时处理多个video，现在发现同时处理超过10个video就会出错，但不知道具体bug是什么。问在debug期间有哪些workaround。
   Threadpool; process; tracing for the CPU usage, and print special logs.
   
   if on production,
    1. check SLA
    2. quickly check server logs and trace the cause
    2. at the same time, adding more servers on production and update LB to buy some time for the time being
    3. check resource related config in the server/system and see if correct
    4. if cannot identify the root cause easily on production, get issues back to the team and call a war room
    then on dev env
    1. reproduce the issue on dev env
    2. trace issues in code, server config, and also deployment
    3. check resource usage ex if any memory leak

          
        
(6) 1.        给一个cpu, ram的图判断有什么问题，cpu曲线上升，ram一条直线？
    Memory leaks happen when your code needs to consume memory in your application, which should be released after a given task is completed but isn't.
    2. thread exhausted的表现有哪些
    3. race condition
    oop：
    1. 继承 vs 组合 的区别
    Inheritance and composition are two programming techniques developers use to establish relationships between classes and objects. Whereas inheritance derives one class from another, composition defines a class as the sum of its parts.
    2. 比较什情况下用继承 / 组合
    3. 什么是 依赖注入，那种情况下需要使用 依赖注入
    
          
1. [DB] what is optimistic concurrency, when it's good/not_good.
2. [DB] what's strong consistency vs eventual consistency, given an example for each;
3. [DB] the SQL is running slowly in production, how to tune it
`select * from a where col1 in (select id from b where ...) and ...`


1.        给一个cpu, ram的图判断有什么问题，cpu曲线上升，ram一条直线？
Memory leaks happen when your code needs to consume memory in your application, which should be released after a given task is completed but isn't.
2. thread exhausted的表现有哪些
3. race condition
oop：
1. 继承 vs 组合 的区别
Inheritance and composition are two programming techniques developers use to establish relationships between classes and objects. Whereas inheritance derives one class from another, composition defines a class as the sum of its parts.
2. 比较什情况下用继承 / 组合
3. 什么是 依赖注入，那种情况下需要使用 依赖注入

Karat 店面， 5分钟聊简历，10分钟答小问题，问题有6个topic， 选了production 和 oop
都不难回答，production的问题有给一个cpu和ram的performance的图，是关于memory leak的， oop有聊composition vs inheritance, how to document the code什么的
